/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/modeling/dancer.glb -o src/components/Dancer.jsx 
*/

import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useState } from "react";
import { useEffect } from "react";

export function Dancer(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/modeling/dancer.glb");
  const { actions } = useAnimations(animations, group);

  const [currentAction, setCurrentAction] = useState("wave");

  useEffect(() => {
    actions[currentAction].fadeIn(0.5).play();
    return () => {
      actions[currentAction].fadeOut(0.5).stop();
    };
  }, [currentAction, actions]);

  return (
    <group
      position-y={0.5}
      scale={0.01}
      ref={group}
      {...props}
      dispose={null}
      onClick={() => {
        setCurrentAction((prev) => {
          if (prev === "wave") {
            return "windmill";
          }
          return "wave";
        });
      }}>
      <group name="AuxScene">
        <group position={[0, -82.942, -1.295]}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh
            name="Ch03"
            geometry={nodes.Ch03.geometry}
            material={materials.Ch03_Body}
            skeleton={nodes.Ch03.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/dancer.glb");
